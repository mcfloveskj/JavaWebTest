<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.application.baseinfo.mapper.BaseInfoMapper">

	<insert id="save" parameterType="com.spring.application.baseinfo.model.BaseInfo">
		INSERT INTO app_patient_info(
		dbidkey,
		name,
		birth,
		sex,
		nation,
		idCard,
		high,
		weight,
		hospitalnum,
		recordnum,
		address,
		patientnum,
		tel,
		phone,
		mail,
		agreecontact,
		othername,
		otheraddress,
		othertel,
		otherphone,
		othermail,
		relation
		)
		VALUES
		(
		#{dbidkey},
		#{name},
		#{birth},
		#{sex},
		#{nation},
		#{idCard},
		#{high},
		#{weight},
		#{hospitalnum},
		#{recordnum},
		#{address},
		#{patientnum},
		#{tel},
		#{phone},
		#{mail},
		#{agreecontact},
		#{othername},
		#{otheraddress},
		#{othertel},
		#{otherphone},
		#{othermail},
		#{relation}
		)
	</insert>
	
	<update id="update" parameterType="com.spring.application.baseinfo.model.BaseInfo">
		update app_patient_info set
		dbidkey = #{dbidkey},
		name = #{name},
		birth = #{birth},
		sex = #{sex},
		nation = #{nation},
		idCard = #{idCard},
		high = #{high},
		weight = #{weight},
		hospitalnum = #{hospitalnum},
		recordnum = #{recordnum},
		address = #{address},
		patientnum = #{patientnum},
		tel = #{tel},
		phone = #{phone},
		mail = #{mail},
		agreecontact = #{agreecontact},
		othername = #{othername},
		otheraddress = #{otheraddress},
		othertel = #{othertel},
		otherphone = #{otherphone},
		othermail = #{othermail},
		relation = #{relation}
		where dbidkey = #{dbidkey}
	</update>

	<select id="getPatientList" parameterType="java.util.Map"
		resultType="com.spring.application.baseinfo.model.BaseInfo">
		SELECT
		app_patient_info.dbidkey,
		app_patient_info.name,
		app_patient_info.birth,
		app_patient_info.sex,
		app_patient_info.nation,
		app_patient_info.idCard,
		app_patient_info.high,
		app_patient_info.weight,
		app_patient_info.hospitalnum,
		app_patient_info.recordnum,
		app_patient_info.agreecontact,
		app_patient_info.mail,
		app_patient_info.phone,
		app_patient_info.tel,
		app_patient_info.patientnum,
		app_patient_info.address,
		app_patient_info.othername,
		app_patient_info.otheraddress,
		app_patient_info.othertel,
		app_patient_info.otherphone,
		app_patient_info.othermail,
		app_patient_info.relation
		FROM
		app_patient_info
		where 1=1
		<if test="patientnum != null">
			and app_patient_info.patientnum like '%${patientnum}%'
		</if>
		<if test="name != null">
			and app_patient_info.name like '%${name}%'
		</if>
		<if test="sex != null">
			and app_patient_info.sex = #{sex}
		</if>
		<if test="start != null and end != null">
			limit #{start}, #{end}
		</if>
		order by app_patient_info.patientnum
	</select>

	<select id="queryByDbidkey" parameterType="java.lang.String"
		resultType="com.spring.application.baseinfo.model.BaseInfo">
		SELECT
		app_patient_info.dbidkey,
		app_patient_info.name,
		app_patient_info.birth,
		app_patient_info.sex,
		app_patient_info.nation,
		app_patient_info.idCard,
		app_patient_info.high,
		app_patient_info.weight,
		app_patient_info.hospitalnum,
		app_patient_info.recordnum,
		app_patient_info.agreecontact,
		app_patient_info.mail,
		app_patient_info.phone,
		app_patient_info.tel,
		app_patient_info.patientnum,
		app_patient_info.address,
		app_patient_info.othername,
		app_patient_info.otheraddress,
		app_patient_info.othertel,
		app_patient_info.otherphone,
		app_patient_info.othermail,
		app_patient_info.relation
		FROM
		app_patient_info
		where app_patient_info.dbidkey = #{_parameter}
	</select>

	<delete id="deleteByDbidkey" parameterType="java.lang.String">
		delete from
		app_patient_info
		where dbidkey = #{_parameter}
	</delete>
</mapper>